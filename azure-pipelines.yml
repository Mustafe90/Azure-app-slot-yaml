trigger:
    - master

pool:
    vmImage: "windows-latest"

stages:
    - stage: Build
      
      jobs:
          - job: Build
            steps:
                - task: DotNetCoreCLI@2
                  displayName: "Nuget Restore"
                  inputs:
                    projects: "**/*.csproj"
                    command: restore
                    arguments: --verbosity d
                
                - task: DotNetCoreCLI@2
                  displayName: "Dotnet Build"
                  inputs:
                      projects: "**/*.csproj"
                      command: build
                      arguments: --no-restore --configuration Release --verbosity d
                
                - task: PublishPipelineArtifact@1
                  inputs:
                   ArtifactName: AppBuilt
                   targetPath: $(System.DefaultWorkingDirectory)
              

          - job: Publish
            dependsOn: Build
            condition: succeeded()

            steps:
                - task: DownloadPipelineArtifact@2
                  displayName: "Download Build"
                  inputs:
                   artifactName: AppBuilt
                   targetPath: $(System.DefaultWorkingDirectory)
                      

                - task: DotNetCoreCLI@2
                  displayName: "Publish"
                  inputs:
                    projects: " $(System.DefaultWorkingDirectory)/$(buildPath)/**/*.csproj"
                    command: publish
                    arguments: --no-build --no-restore --configuration Release --verbosity d --output $(System.DefaultWorkingDirectory)/Publish

                - task: PublishPipelineArtifact@1
                  condition: succeeded() 
                  displayName: "Publish Release"
                  inputs:
                      artifact: AppRelease
                      targetPath: $(System.DefaultWorkingDirectory)/Publish

    - stage: Deplopyment

      dependsOn: Build
      condition: succeeded()
      jobs:
          - deployment: AppSlotReleaseStarts
            environment: "ye-env"
            strategy:

            #Blue-Green deployment will be soon available which means that will be far more appriopriate then deploying it once :P 
             runOnce:
                 deploy:
                     steps:

                          #Cheating a bit here :P 
                         - task: DownloadPipelineArtifact@2
                           displayName: "Downloading Cause it aint downloading right"
                           inputs:
                            artifactName: AppRelease
                            targetPath: $(System.DefaultWorkingDirectory)

                         - task: AzureWebApp@1
                           inputs:
                               azureSubscription: "appSlotDemoServiceConnection"
                               appType: webApp
                               appName: "DavidsDavidsonApp"
                               resourceGroupName: "AAPSD"
                               slotName: staging
                               deployToSlotOrASE: true

                         - task: AzureAppServiceManage@0
                           inputs:
                               azureSubscription: "appSlotDemoServiceConnection"
                               appType: webApp
                               WebAppName: 'DavidsDavidsonApp'
                               ResourceGroupName: 'AAPSD'
                               SourceSlot: staging
                               SwapWithProduction: true                          

                      


                  
